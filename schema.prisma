generator client {
  provider = "prisma-client-js"
}
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  password  String
  firstName String   @map("first_name")
  lastName  String   @map("last_name")
  phone     String?
  role      Role     @default(buyer)
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  products  Product[]
  orders    Order[]

  @@map("users")
}

model Product {
  id          Int      @id @default(autoincrement())
  title       String
  description String   @db.Text
  price       Decimal  @db.Decimal(10,2)
  inventory   Int      @default(0)
  sellerId    Int      @map("seller_id")
  createdAt   DateTime @default(now()) @map("created_at")
  updatedAt   DateTime @updatedAt @map("updated_at")

  seller      User           @relation(fields: [sellerId], references: [id], onDelete: Cascade)
  images      ProductImage[]
  orderItems  OrderItem[]

  @@index([sellerId])
  @@index([createdAt])
  @@map("products")
}

model ProductImage {
  id        Int      @id @default(autoincrement())
  productId Int      @map("product_id")
  imageUrl  String   @map("image_url")
  isPrimary Boolean  @default(false)
  createdAt DateTime @default(now()) @map("created_at")

  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@index([productId])
  @@map("product_images")
}

model Order {
  id         Int       @id @default(autoincrement())
  userId     Int       @map("user_id")
  total      Decimal   @db.Decimal(10,2)
  status     String
  createdAt  DateTime  @default(now()) @map("created_at")
  updatedAt  DateTime  @updatedAt @map("updated_at")

  user       User      @relation(fields: [userId], references: [id], onDelete: Cascade)
  orderItems OrderItem[]

  @@map("orders")
}

model OrderItem {
  id        Int      @id @default(autoincrement())
  orderId   Int      @map("order_id")
  productId Int      @map("product_id")
  quantity  Int
  price     Decimal  @db.Decimal(10,2)

  order     Order    @relation(fields: [orderId], references: [id], onDelete: Cascade)
  product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)

  @@map("order_items")
}

enum Role {
  buyer
  seller
  admin
}
